// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MyProjectAPI.API.Data;

namespace MyProjectAPI.API.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20220401111548_FirstCreate")]
    partial class FirstCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.23")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("MyProjectAPI.Models.Employee", b =>
                {
                    b.Property<int>("EmployeeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectID")
                        .HasColumnType("int");

                    b.HasKey("EmployeeID");

                    b.HasIndex("ProjectID");

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            EmployeeID = 1,
                            Email = "jasmine@company.se",
                            FName = "Jasmine",
                            LName = "Coleman",
                            ProjectID = 1
                        },
                        new
                        {
                            EmployeeID = 2,
                            Email = "lucas@company.se",
                            FName = "Lucas",
                            LName = "Brown",
                            ProjectID = 1
                        },
                        new
                        {
                            EmployeeID = 3,
                            Email = "liam@company.se",
                            FName = "Liam",
                            LName = "Mackay",
                            ProjectID = 1
                        },
                        new
                        {
                            EmployeeID = 4,
                            Email = "emily@company.se",
                            FName = "Emily",
                            LName = "Young",
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 5,
                            Email = "dylan@company.se",
                            FName = "Dylan",
                            LName = "Terry",
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 6,
                            Email = "carolyn@company.se",
                            FName = "Carolyn",
                            LName = "North",
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 7,
                            Email = "sue@company.se",
                            FName = "Sue",
                            LName = "McKenzie",
                            ProjectID = 2
                        },
                        new
                        {
                            EmployeeID = 8,
                            Email = "brian@company.se",
                            FName = "Brian",
                            LName = "Hamilton",
                            ProjectID = 3
                        },
                        new
                        {
                            EmployeeID = 9,
                            Email = "leah@company.se",
                            FName = "Leah",
                            LName = "Ellison",
                            ProjectID = 3
                        },
                        new
                        {
                            EmployeeID = 10,
                            Email = "adrian@company.se",
                            FName = "Adrian",
                            LName = "Walsh",
                            ProjectID = 3
                        });
                });

            modelBuilder.Entity("MyProjectAPI.Models.Project", b =>
                {
                    b.Property<int>("ProjectID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProjectID");

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            ProjectID = 1,
                            ProjectName = "Project 1"
                        },
                        new
                        {
                            ProjectID = 2,
                            ProjectName = "Project 2"
                        },
                        new
                        {
                            ProjectID = 3,
                            ProjectName = "Project 3"
                        });
                });

            modelBuilder.Entity("MyProjectAPI.Models.TimReport", b =>
                {
                    b.Property<int>("ReportID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("EmployeeID")
                        .HasColumnType("int");

                    b.Property<int>("Week")
                        .HasColumnType("int");

                    b.Property<double>("wWorkingHours")
                        .HasColumnType("float");

                    b.HasKey("ReportID");

                    b.HasIndex("EmployeeID");

                    b.ToTable("TimReports");

                    b.HasData(
                        new
                        {
                            ReportID = 1,
                            EmployeeID = 1,
                            Week = 1,
                            wWorkingHours = 20.0
                        },
                        new
                        {
                            ReportID = 2,
                            EmployeeID = 2,
                            Week = 1,
                            wWorkingHours = 45.0
                        },
                        new
                        {
                            ReportID = 3,
                            EmployeeID = 3,
                            Week = 1,
                            wWorkingHours = 50.0
                        },
                        new
                        {
                            ReportID = 4,
                            EmployeeID = 4,
                            Week = 1,
                            wWorkingHours = 30.0
                        },
                        new
                        {
                            ReportID = 5,
                            EmployeeID = 5,
                            Week = 1,
                            wWorkingHours = 40.0
                        },
                        new
                        {
                            ReportID = 6,
                            EmployeeID = 6,
                            Week = 1,
                            wWorkingHours = 40.0
                        },
                        new
                        {
                            ReportID = 7,
                            EmployeeID = 7,
                            Week = 1,
                            wWorkingHours = 40.0
                        },
                        new
                        {
                            ReportID = 8,
                            EmployeeID = 8,
                            Week = 1,
                            wWorkingHours = 15.0
                        },
                        new
                        {
                            ReportID = 9,
                            EmployeeID = 9,
                            Week = 1,
                            wWorkingHours = 40.0
                        },
                        new
                        {
                            ReportID = 10,
                            EmployeeID = 10,
                            Week = 1,
                            wWorkingHours = 25.0
                        });
                });

            modelBuilder.Entity("MyProjectAPI.Models.Employee", b =>
                {
                    b.HasOne("MyProjectAPI.Models.Project", "Project")
                        .WithMany("Employee")
                        .HasForeignKey("ProjectID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("MyProjectAPI.Models.TimReport", b =>
                {
                    b.HasOne("MyProjectAPI.Models.Employee", "Employee")
                        .WithMany("TimReport")
                        .HasForeignKey("EmployeeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
